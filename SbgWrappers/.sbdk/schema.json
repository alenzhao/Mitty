[
  {
    "schema": {
      "inputs": [], 
      "outputs": [
        {
          "description": "Deletion definitions for mutate", 
          "id": "json_fragment", 
          "list": false, 
          "name": "Deletions", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": "General", 
          "condition": null, 
          "default": null, 
          "description": "A unique name for this instance of the insert generator", 
          "id": "model_id", 
          "list": false, 
          "name": "Model id", 
          "pattern": null, 
          "required": true, 
          "type": "string"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0, 
          "description": "start generating deletions from here (0.0, 1.0)", 
          "id": "start_dels_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Start dels frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 1, 
          "description": "stop generating deletions after this (0.0, 1.0)", 
          "id": "stop_dels_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Stop dels frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of having heterozygous mutation", 
          "id": "phet", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Phet", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of a deletion", 
          "id": "p_del", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "P del", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 10, 
          "description": "Mean length of deletion (Poisson distributed)", 
          "id": "lam_del", 
          "list": false, 
          "max": null, 
          "min": 1, 
          "name": "Lam del", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for random number generator used to decide if genotype is heterozygous or not", 
          "id": "het_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Het rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 2, 
          "description": "Seed for random number generator used to decide which strand the variant will be on", 
          "id": "strand_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Strand rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 3, 
          "description": "Seed for variant location random number generator", 
          "id": "del_loc_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Del loc rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 4, 
          "description": "Seed for deletion length random number generator", 
          "id": "del_len_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Del len rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }
      ]
    }, 
    "wrapper_id": "mitty.plugins.mutation.delete_wrapper.Deletion"
  }, 
  {
    "schema": {
      "inputs": [
        {
          "description": "The reference sequence (.smalla format)", 
          "id": "ref", 
          "list": false, 
          "name": "Reference", 
          "required": false, 
          "types": []
        }, 
        {
          "description": "The mutation plugins", 
          "id": "plugins", 
          "list": true, 
          "name": "Plugins", 
          "required": false, 
          "types": []
        }
      ], 
      "outputs": [
        {
          "description": "A VCF file containing a list of simulated variants", 
          "id": "vcf", 
          "list": true, 
          "name": "VCF file", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": null, 
          "condition": null, 
          "default": "", 
          "description": "Output file name. Leaving this blank will generate a file name with _variants.vcf added to the sequence name", 
          "id": "vcf_file_name", 
          "list": false, 
          "name": "Vcf file name", 
          "pattern": null, 
          "required": false, 
          "type": "string"
        }, 
        {
          "category": null, 
          "condition": null, 
          "default": "1", 
          "description": "Chromosome number", 
          "id": "chromosome", 
          "list": false, 
          "name": "Chromosome", 
          "pattern": null, 
          "required": false, 
          "type": "string"
        }
      ]
    }, 
    "wrapper_id": "mitty.mutate_wrapper.Mutate"
  }, 
  {
    "schema": {
      "inputs": [
        {
          "description": "The reference sequence (.smalla format)", 
          "id": "ref_seq", 
          "list": false, 
          "name": "Reference", 
          "required": true, 
          "types": []
        }, 
        {
          "description": "VCF file (.vcf + .vcf.gz + .vcf.gz.tbi)", 
          "id": "vcf_files", 
          "list": true, 
          "name": "VCF file", 
          "required": true, 
          "types": []
        }
      ], 
      "outputs": [
        {
          "description": "smalla file(s) containing variant sequence(s) with listed variants (.smalla + .pos)", 
          "id": "var_seqs", 
          "list": true, 
          "name": "Output sequence (s)", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": null, 
          "condition": null, 
          "default": "", 
          "description": "Prefix for the ouput smalla file(s). If left empty it is automatically filled out based on the input name", 
          "id": "var_seq_prefix", 
          "list": false, 
          "name": "Var seq prefix", 
          "pattern": null, 
          "required": true, 
          "type": "string"
        }, 
        {
          "category": null, 
          "condition": null, 
          "default": "1", 
          "description": "Chromosome", 
          "id": "chromosome", 
          "list": false, 
          "name": "Chromosome", 
          "pattern": null, 
          "required": true, 
          "type": "string"
        }, 
        {
          "category": null, 
          "condition": null, 
          "default": 1, 
          "description": "How many sets of chromosomes do we have? We can take a diploid VCF file(with genotype info) and discard the genotype information - treat allmutations as homozygous - by putting in ploidy=1 here", 
          "id": "ploidy", 
          "list": false, 
          "max": 2, 
          "min": 1, 
          "name": "Ploidy", 
          "required": true, 
          "step": null, 
          "type": "integer"
        }
      ]
    }, 
    "wrapper_id": "mitty.vcf2seq_wrapper.Vcf2Seq"
  }, 
  {
    "schema": {
      "inputs": [], 
      "outputs": [
        {
          "description": "Output", 
          "id": "out", 
          "list": false, 
          "name": "Output", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": null, 
          "condition": null, 
          "default": "A", 
          "description": "P 1", 
          "id": "p1", 
          "list": false, 
          "name": "P1", 
          "pattern": null, 
          "required": false, 
          "type": "string"
        }, 
        {
          "category": null, 
          "condition": null, 
          "default": "B", 
          "description": "P 2", 
          "id": "p2", 
          "list": false, 
          "name": "P2", 
          "pattern": null, 
          "required": false, 
          "type": "string"
        }
      ]
    }, 
    "wrapper_id": "mitty.empty_wrapper.Dummy"
  }, 
  {
    "schema": {
      "inputs": [], 
      "outputs": [
        {
          "description": "Simple fixed length, random reads with exponential error profile", 
          "id": "json_fragment", 
          "list": false, 
          "name": "Simple Reads", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": "Template", 
          "condition": null, 
          "default": false, 
          "description": "Are these paired end reads?", 
          "id": "paired", 
          "list": false, 
          "name": "Paired", 
          "required": false, 
          "type": "boolean"
        }, 
        {
          "category": "Template", 
          "condition": null, 
          "default": 100, 
          "description": "Length of reads", 
          "id": "read_len", 
          "list": false, 
          "max": null, 
          "min": null, 
          "name": "Read len", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Template", 
          "condition": null, 
          "default": 250, 
          "description": "Length of template", 
          "id": "template_len", 
          "list": false, 
          "max": null, 
          "min": null, 
          "name": "Template len", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "RNG seeds", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for RNG governing where reads are taken from", 
          "id": "read_loc_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Read loc rng seed", 
          "required": true, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "RNG seeds", 
          "condition": null, 
          "default": 2, 
          "description": "Seed for RNG governing location of read errors", 
          "id": "error_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Error rng seed", 
          "required": true, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "RNG seeds", 
          "condition": null, 
          "default": 3, 
          "description": "Seed for RNG governing base substitution of read errors", 
          "id": "base_chose_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Base chose rng seed", 
          "required": true, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Read Errors", 
          "condition": null, 
          "default": 0.8, 
          "description": "Error level at tip end of read strand", 
          "id": "max_p_error", 
          "list": false, 
          "max": 1.0, 
          "min": 0, 
          "name": "Max p error", 
          "required": true, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Read Errors", 
          "condition": null, 
          "default": 0.1, 
          "description": "Exponential constant for read error envelope. The smaller this is, the faster the error rate vanishes to zero as we walk along the read from tip to base", 
          "id": "k", 
          "list": false, 
          "max": 1.0, 
          "min": 0, 
          "name": "K", 
          "required": true, 
          "step": null, 
          "type": "float"
        }
      ]
    }, 
    "wrapper_id": "mitty.plugins.reads.simple_reads_wrapper.SimpleReads"
  }, 
  {
    "schema": {
      "inputs": [], 
      "outputs": [
        {
          "description": "Insertion definitions for mutate", 
          "id": "json_fragment", 
          "list": false, 
          "name": "Inserts", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": "General", 
          "condition": null, 
          "default": null, 
          "description": "A unique name for this instance of the insert generator", 
          "id": "model_id", 
          "list": false, 
          "name": "Model id", 
          "pattern": null, 
          "required": true, 
          "type": "string"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0, 
          "description": "start generating inserts from here (0.0, 1.0)", 
          "id": "start_ins_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Start ins frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 1, 
          "description": "stop generating inserts after this (0.0, 1.0)", 
          "id": "stop_ins_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Stop ins frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of having heterozygous mutation", 
          "id": "phet", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Phet", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of an insert", 
          "id": "p_ins", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "P ins", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 10, 
          "description": "Mean length of insertion (Poisson distributed)", 
          "id": "lam_ins", 
          "list": false, 
          "max": null, 
          "min": 1, 
          "name": "Lam ins", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for random number generator used to decide if genotype is heterozygous or not", 
          "id": "het_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Het rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 2, 
          "description": "Seed for random number generator used to decide which strand the variant will be on", 
          "id": "strand_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Strand rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 3, 
          "description": "Seed for variant location random number generator", 
          "id": "ins_loc_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Ins loc rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 4, 
          "description": "Seed for insert length random number generator", 
          "id": "ins_len_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Ins len rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 5, 
          "description": "Seed for random number generator used to select ALT bases", 
          "id": "base_sel_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Base sel rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }
      ]
    }, 
    "wrapper_id": "mitty.plugins.mutation.insert_wrapper.Insert"
  }, 
  {
    "schema": {
      "inputs": [], 
      "outputs": [
        {
          "description": "SNP definitions for mutate", 
          "id": "json_fragment", 
          "list": false, 
          "name": "SNPs", 
          "required": false, 
          "types": []
        }
      ], 
      "params": [
        {
          "category": "General", 
          "condition": null, 
          "default": null, 
          "description": "A unique name for this instance of the SNP generator", 
          "id": "model_id", 
          "list": false, 
          "name": "Model id", 
          "pattern": null, 
          "required": true, 
          "type": "string"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0, 
          "description": "start generating snps from here (0.0, 1.0)", 
          "id": "start_snps_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Start snps frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 1, 
          "description": "stop generating snps after this (0.0, 1.0)", 
          "id": "stop_snps_frac", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Stop snps frac", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of having heterozygous mutation", 
          "id": "phet", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "Phet", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params", 
          "condition": null, 
          "default": 0.01, 
          "description": "probability of SNPs", 
          "id": "p", 
          "list": false, 
          "max": 1, 
          "min": 0, 
          "name": "P", 
          "required": false, 
          "step": null, 
          "type": "float"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for random number generator used to decide if genotype is heterozygous or not", 
          "id": "het_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Het rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for random number generator used to decide which strand the SNP will be on", 
          "id": "strand_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Strand rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for SNP locator random number generator", 
          "id": "poisson_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Poisson rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }, 
        {
          "category": "Model params: RNG", 
          "condition": null, 
          "default": 1, 
          "description": "Seed for random number generator used to select ALT bases", 
          "id": "base_sub_rng_seed", 
          "list": false, 
          "max": 4294967295, 
          "min": 0, 
          "name": "Base sub rng seed", 
          "required": false, 
          "step": null, 
          "type": "integer"
        }
      ]
    }, 
    "wrapper_id": "mitty.plugins.mutation.snp_wrapper.SNP"
  }
]