Mitty is a collection of programs to generate simulated datasets to benchmark aligners and variant callers.

Mitty generates simulated data by starting from a reference genome and then adding controlled mutations to it to create
one or more variant "sample" genomes. Mitty can then generate reads from the chromosomes of the mutated genome(s). 

At each stage of this process we know the origins of the data and so we know

- The correct alignment of each read
- The correct variants in the "sample" that these reads came from.

**The data generated by Mitty can, therefore, be used to test the correctness of aligners and variant callers under
different conditions and data set characteristics.**

Short Demo
==========
(For a proper introduction to using Mitty, please see the full documentation. For the impatient, please see the Quickstart section)

Create genomes using the `genomes` program and a `.json` file describing the simulation parameters and models::

    genomes generate --pfile variants.json

Generate reads from a genome using the `reads` program and a `.json` file describing the read model to use::

    reads --pfile reads.json
    
Analyze `.bam` files produced by aligners from the simulated reads::

    perfectbam --inbam=../examples/demo/Out/reads.bam

Plot the results of the analysis::

    plot_align circle ../examples/demo/Out/reads.bam
    plot_align matrix ../examples/demo/Out/reads.bam


Installation
============

Virtual environments
--------------------
While not required, it is strongly recommended that you use `virtual environments`_ for your Python code. I find
`virtualenvwrapper`_ awesome for managing Python virtual environments::

    sudo pip install virtualenvwrapper
    source /usr/local/bin/virtualenvwrapper.sh  # You may want to add this to your login script

(You should study the details of installing this tool from their excellent documentation)

Then create a new environment for your Mitty install::
    
    mkvirtualenv mitty-test
    
This will prepare a new environment and activate it. When you are done you can do::

    deactivate

And when you want to come back do::

    workon mitty-test


.. _virtual environments: http://docs.python-guide.org/en/latest/dev/virtualenvs/
.. _virtualenvwrapper: https://virtualenvwrapper.readthedocs.org/en/latest/


Mitty installation
------------------
On Linux, you may first need to pull some dependencies (as needed) such as ::

    sudo apt-get install python-pip git python-numpy python-dev cython zlib1g-dev

For the dev team, you will want the `develop` branch of Mitty ::
    
    pip install git+https://gitlab.sbgenomics.com:9443/graphgenome/mitty.git@develop#egg=mitty

On mac os x this will pull all packages as needed, including numpy. 

The SBG dev pi server contains wheels for most of the packages. You can use the devpi server (cuts down on compilation
time in many cases) by adding teh following lines to your ~/.pip/pip.conf file (you may need to create the file first):

::

    [global]
    extra-index-url = https://pip.sbgenomics.com/packages


    
Run the tests
-------------
::

    pip install nose  # If needed
    nosetests mitty.tests -v


Developing
----------

To develop on Mitty, simply clone the repository, and from the project root run ::

    pip install -e .


Creating wheels
---------------
::

    pip install wheel  # If needed
    pip wheel .
